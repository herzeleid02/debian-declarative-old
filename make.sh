#!/bin/bash
set -o posix
# DO NOT edit this file directory (except in cases where you want to fix it)

project_mount="/opt/project/"
container_name="bootstrap-$(tr -dc a-z </dev/urandom | head -c 4)"

project_directory=$(realpath ${project_directory})

echo "run as root"

if [ -z "$1" ]; then
	echo "provide a chroot directory"
	exit 1
fi


# to be replaced with containerfile
#podman run --rm --name ${container_name} --volume ${project_directory}:${project_mount}:z -it ${container_image} /bin/bash
# use the "main.sh" ""function""
podman run \
	-e container_image="${container_image}" \
	-e hostname="${hostname}" \
	-e users="${users}" \
	-e apt_packages="${apt_packages}" \
	-e project_mount="${project_mount}" \
	-e functions="${functions}" \
	--name ${container_name} \
	--volume ${project_directory}:${project_mount}:z ${container_image} \
	${project_mount}/main.sh "$@"
#podman exec ${container_name} "/bin/sh -c "/usr/bin/apt-get -y install ${apt_packages}""

# beware -- using the same string for the latter container image
podman commit --squash ${container_name} ${container_name} # why squash? it creates a single tar
podman save ${container_name} | tar -xpf - -O | tar -xpf - -C ${chroot_directory}
podman image rm ${container_name}
podman rm ${container_name}
